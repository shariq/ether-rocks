Usage eth [OPTIONS]
Options:

Operating mode (default is non-interactive node):
    console  Enter interactive console mode (default: non-interactive).
    attach  Ether interactive console mode of already-running eth.    import <file>  Import file as a concatenated series of blocks.
    export <file>  Export file as a concatenated series of blocks.
Client mode (default):
    --olympic  Use the Olympic (0.9) protocol.
    --frontier  Use the Frontier (1.0) protocol.
    --private <name>  Use a private chain.
    --genesis-json <file>  Import the genesis block information from the given JSON file.

    -o,--mode <full/peer>  Start a full node or a peer node (default: full).

    -j,--json-rpc  Enable JSON-RPC server (default: off).
    --ipc  Enable IPC server (default: on).
    --no-ipc  Disable IPC server.
    --json-rpc-port <n>  Specify JSON-RPC server port (implies '-j', default: 8545).
    --rpccorsdomain <domain>  Domain on which to send Access-Control-Allow-Origin header.
    --admin <password>  Specify admin session key for JSON-RPC (default: auto-generated and printed at start-up).
    -K,--kill  Kill the blockchain first.
    -R,--rebuild  Rebuild the blockchain from the existing database.
    --rescue  Attempt to rescue a corrupt database.

    --import-presale <file>  Import a pre-sale key; you'll need to specify the password to this key.
    -s,--import-secret <secret>  Import a secret key into the key store and use as the default.
    -S,--import-session-secret <secret>  Import a secret key into the key store and use as the default for this session only.
    --sign-key <address>  Sign all transactions with the key of the given address.
    --session-sign-key <address>  Sign all transactions with the key of the given address for this session only.
    --master <password>  Give the master password for the key store.
    --password <password>  Give a password for a private key.
    --sentinel <server>  Set the sentinel for reporting bad blocks or chain issues.

Client transacting:
    --ask <wei>  Set the minimum ask gas price under which no transaction will be mined (default 50000000000 ).
    --bid <wei>  Set the bid gas price to pay for transactions (default 50000000000 ).
    --unsafe-transactions  Allow all transactions to proceed without verification. EXTREMELY UNSAFE.
Client mining:
    -a,--address <addr>  Set the coinbase (mining payout) address to given address (default: auto).
    -m,--mining <on/off/number>  Enable mining, optionally for a specified number of blocks (default: off).
    -f,--force-mining  Mine even when there are no transactions to mine (default: off).
    --mine-on-wrong-chain  Mine even when we know that it is the wrong chain (default: off).
    -C,--cpu  When mining, use the CPU.
    -G,--opencl  When mining, use the GPU via OpenCL.
    --opencl-platform <n>  When mining using -G/--opencl, use OpenCL platform n (default: 0).
    --opencl-device <n>  When mining using -G/--opencl, use OpenCL device n (default: 0).
    -t, --mining-threads <n>  Limit number of CPU/GPU miners to n (default: use everything available on selected platform).

Client networking:
    --client-name <name>  Add a name to your client's version string (default: blank).
    --bootstrap  Connect to the default Ethereum peer servers (default unless --no-discovery used).
    --no-bootstrap  Do not connect to the default Ethereum peer servers (default only when --no-discovery is used).
    -x,--peers <number>  Attempt to connect to a given number of peers (default: 11).
    --peer-stretch <number>  Give the accepted connection multiplier (default: 7).
    --public-ip <ip>  Force advertised public IP to the given IP (default: auto).
    --listen-ip <ip>(:<port>)  Listen on the given IP for incoming connections (default: 0.0.0.0).
    --listen <port>  Listen on the given port for incoming connections (default: 30303).
    -r,--remote <host>(:<port>)  Connect to the given remote host (default: none).
    --port <port>  Connect to the given remote port (default: 30303).
    --network-id <n>  Only connect to other hosts with this network id.
    --upnp <on/off>  Use UPnP for NAT (default: on).
    --peerset <list>  Space delimited list of peers; element format: type:publickey@ipAddress[:port].
        Types:
        default		Attempt connection when no other peers are available and pinning is disabled.
        require		Keep connected at all times.
    --no-discovery  Disable node discovery, implies --no-bootstrap.
    --pin  Only accept or connect to trusted peers.
    --hermit  Equivalent to --no-discovery --pin.
    --sociable  Force discovery and no pinning.

Work farming mode:
    -F,--farm <url>  Put into mining farm mode with the work server at URL (default: http://127.0.0.1:8545)
    --farm-recheck <n>  Leave n ms between checks for changed work (default: 500).
    --no-precompute  Don't precompute the next epoch's DAG.
Ethash verify mode:
    -w,--check-pow <headerHash> <seedHash> <difficulty> <nonce>  Check PoW credentials for validity.

Benchmarking mode:
    -M,--benchmark  Benchmark for mining and exit; use with --cpu and --opencl.
    --benchmark-warmup <seconds>  Set the duration of warmup for the benchmark tests (default: 3).
    --benchmark-trial <seconds>  Set the duration for each trial for the benchmark tests (default: 3).
    --benchmark-trials <n>  Set the duration of warmup for the benchmark tests (default: 5).
    --phone-home <on/off>  When benchmarking, publish results (default: on)
DAG creation mode:
    -D,--create-dag <number>  Create the DAG in preparation for mining on given block and exit.
Mining configuration:
    -C,--cpu  When mining, use the CPU.
    -G,--opencl  When mining use the GPU via OpenCL.
    --opencl-platform <n>  When mining using -G/--opencl use OpenCL platform n (default: 0).
    --opencl-device <n>  When mining using -G/--opencl use OpenCL device n (default: 0).
    -t, --mining-threads <n> Limit number of CPU/GPU miners to n (default: use everything available on selected platform)
    --allow-opencl-cpu Allows CPU to be considered as an OpenCL device if the OpenCL platform supports it.
    --list-devices List the detected OpenCL devices and exit.
    --current-block Let the miner know the current block number at configuration time. Will help determine DAG size and required GPU memory.
    --cl-extragpu-mem Set the memory (in MB) you believe your GPU requires for stuff other than mining. Windows rendering e.t.c..
    --cl-local-work Set the OpenCL local work size. Default is 64
    --cl-global-work Set the OpenCL global work size as a multiple of the local work size. Default is 4096 * 64
    --cl-ms-per-batch Set the OpenCL target milliseconds per batch (global workgroup size). Default is 0. If 0 is given then no autoadjustment of global work size will happen
Client structured logging:
    --structured-logging  Enable structured logging (default: output to stdout).
    --structured-logging-format <format>  Set the structured logging time format.
    --structured-logging-url <URL>  Set the structured logging destination (currently only file:// supported).

Attach mode:
    --session-key <hex>  Use the given session key when attaching to the remote eth instance.
    --url <url>  Attach to the remote eth instance with the given URL.

Import/export modes:
    --from <n>  Export only from block n; n may be a decimal, a '0x' prefixed hash, or 'latest'.
    --to <n>  Export only to block n (inclusive); n may be a decimal, a '0x' prefixed hash, or 'latest'.
    --only <n>  Equivalent to --export-from n --export-to n.
    --dont-check  Prevent checking some block aspects. Faster importing, but to apply only when the data is known to be valid.

General Options:
    -d,--db-path <path>  Load database from path (default: /home/shariq/.ethereum).
    -v,--verbosity <0 - 9>  Set the log verbosity from 0 to 9 (default: 8).
    -V,--version  Show the version and exit.
    -h,--help  Show this help message and exit.

Experimental / Proof of Concept:
    --shh  Enable Whisper.

