function findPrimes(r){var e,n,t,_;for(n=new Array(r),e=0;r>e;e++)n[e]=0;for(n[0]=2,t=0;n[t]<r;){for(e=n[t]*n[t];r>e;e+=n[t])n[e]=1;for(t++,n[t]=n[t-1]+1;n[t]<r&&n[n[t]];n[t]++);}for(_=new Array(t),e=0;t>e;e++)_[e]=n[e];return _}function millerRabinInt(r,e){return mr_x1.length!=r.length&&(mr_x1=dup(r),mr_r=dup(r),mr_a=dup(r)),copyInt_(mr_a,e),millerRabin(r,mr_a)}function millerRabin(r,e){var n,t,_,a;for(mr_x1.length!=r.length&&(mr_x1=dup(r),mr_r=dup(r),mr_a=dup(r)),copy_(mr_a,e),copy_(mr_r,r),copy_(mr_x1,r),addInt_(mr_r,-1),addInt_(mr_x1,-1),_=0,n=0;n<mr_r.length;n++)for(t=1;t<mask;t<<=1)r[n]&t?(a=_<mr_r.length+bpe?_:0,n=mr_r.length,t=mask):_++;if(a&&rightShift_(mr_r,a),powMod_(mr_a,mr_r,r),!equalsInt(mr_a,1)&&!equals(mr_a,mr_x1)){for(t=1;a-1>=t&&!equals(mr_a,mr_x1);){if(squareMod_(mr_a,r),equalsInt(mr_a,1))return 0;t++}if(!equals(mr_a,mr_x1))return 0}return 1}function bitSize(r){var e,n,t;for(e=r.length-1;0==r[e]&&e>0;e--);for(n=0,t=r[e];t;t>>=1,n++);return n+=bpe*e}function expand(r,e){var n=int2bigInt(0,(r.length>e?r.length:e)*bpe,0);return copy_(n,r),n}function randTruePrime(r){var e=int2bigInt(0,r,0);return randTruePrime_(e,r),trim(e,1)}function randProbPrime(r){return r>=600?randProbPrimeRounds(r,2):r>=550?randProbPrimeRounds(r,4):r>=500?randProbPrimeRounds(r,5):r>=400?randProbPrimeRounds(r,6):r>=350?randProbPrimeRounds(r,7):r>=300?randProbPrimeRounds(r,9):r>=250?randProbPrimeRounds(r,12):r>=200?randProbPrimeRounds(r,15):r>=150?randProbPrimeRounds(r,18):r>=100?randProbPrimeRounds(r,27):randProbPrimeRounds(r,40)}function randProbPrimeRounds(r,e){var n,t,_,a;for(a=3e4,n=int2bigInt(0,r,0),0==primes.length&&(primes=findPrimes(3e4)),rpprb.length!=n.length&&(rpprb=dup(n));;){for(randBigInt_(n,r,0),n[0]|=1,_=0,t=0;t<primes.length&&primes[t]<=a;t++)if(0==modInt(n,primes[t])&&!equalsInt(n,primes[t])){_=1;break}for(t=0;e>t&&!_;t++){for(randBigInt_(rpprb,r,0);!greater(n,rpprb);)randBigInt_(rpprb,r,0);millerRabin(n,rpprb)||(_=1)}if(!_)return n}}function mod(r,e){var n=dup(r);return mod_(n,e),trim(n,1)}function addInt(r,e){var n=expand(r,r.length+1);return addInt_(n,e),trim(n,1)}function mult(r,e){var n=expand(r,r.length+e.length);return mult_(n,e),trim(n,1)}function powMod(r,e,n){var t=expand(r,n.length);return powMod_(t,trim(e,2),trim(n,2),0),trim(t,1)}function sub(r,e){var n=expand(r,r.length>e.length?r.length+1:e.length+1);return sub_(n,e),trim(n,1)}function add(r,e){var n=expand(r,r.length>e.length?r.length+1:e.length+1);return add_(n,e),trim(n,1)}function inverseMod(r,e){var n,t=expand(r,e.length);return n=inverseMod_(t,e),n?trim(t,1):null}function multMod(r,e,n){var t=expand(r,n.length);return multMod_(t,e,n),trim(t,1)}function randTruePrime_(r,e){var n,t,_,a,o,s,g,i,f,l,u;if(0==primes.length&&(primes=findPrimes(3e4)),0==pows.length)for(pows=new Array(512),o=0;512>o;o++)pows[o]=Math.pow(2,o/511-1);if(n=.1,t=20,recLimit=20,s_i2.length!=r.length&&(s_i2=dup(r),s_R=dup(r),s_n1=dup(r),s_r2=dup(r),s_d=dup(r),s_x1=dup(r),s_x2=dup(r),s_b=dup(r),s_n=dup(r),s_i=dup(r),s_rm=dup(r),s_q=dup(r),s_a=dup(r),s_aa=dup(r)),e<=recLimit){for(_=(1<<(e+2>>1))-1,copyInt_(r,0),a=1;a;)for(a=0,r[0]=1|1<<e-1|Math.floor(Math.random()*(1<<e)),o=1;o<primes.length&&(primes[o]&_)==primes[o];o++)if(0==r[0]%primes[o]){a=1;break}return void carry_(r)}if(g=n*e*e,e>2*t)for(s=1;t>=e-e*s;)s=pows[Math.floor(512*Math.random())];else s=.5;for(u=Math.floor(s*e)+1,randTruePrime_(s_q,u),copyInt_(s_i2,0),s_i2[Math.floor((e-2)/bpe)]|=1<<(e-2)%bpe,divide_(s_i2,s_q,s_i,s_rm),f=bitSize(s_i);;){for(;randBigInt_(s_R,f,0),!greater(s_i,s_R););for(addInt_(s_R,1),add_(s_R,s_i),copy_(s_n,s_q),mult_(s_n,s_R),multInt_(s_n,2),addInt_(s_n,1),copy_(s_r2,s_R),multInt_(s_r2,2),i=0,o=0;o<primes.length&&primes[o]<g;o++)if(0==modInt(s_n,primes[o])&&!equalsInt(s_n,primes[o])){i=1;break}if(i||millerRabinInt(s_n,2)||(i=1),!i){for(addInt_(s_n,-3),o=s_n.length-1;0==s_n[o]&&o>0;o--);for(l=0,w=s_n[o];w;w>>=1,l++);for(l+=bpe*o;randBigInt_(s_a,l,0),!greater(s_n,s_a););if(addInt_(s_n,3),addInt_(s_a,2),copy_(s_b,s_a),copy_(s_n1,s_n),addInt_(s_n1,-1),powMod_(s_b,s_n1,s_n),addInt_(s_b,-1),isZero(s_b)&&(copy_(s_b,s_a),powMod_(s_b,s_r2,s_n),addInt_(s_b,-1),copy_(s_aa,s_n),copy_(s_d,s_b),GCD_(s_d,s_n),equalsInt(s_d,1)))return void copy_(r,s_aa)}}}function randBigInt(r,e){var n,t;return n=Math.floor((r-1)/bpe)+2,t=int2bigInt(0,0,n),randBigInt_(t,r,e),t}function randBigInt_(r,e,n){var t,_;for(t=0;t<r.length;t++)r[t]=0;for(_=Math.floor((e-1)/bpe)+1,t=0;_>t;t++)r[t]=Math.floor(Math.random()*(1<<bpe-1));r[_-1]&=(2<<(e-1)%bpe)-1,1==n&&(r[_-1]|=1<<(e-1)%bpe)}function GCD(r,e){var n,t;return n=dup(r),t=dup(e),GCD_(n,t),n}function GCD_(r,e){var n,_,a,o,s,g,i,f,l;for(T.length!=r.length&&(T=dup(r)),l=1;l;){for(l=0,n=1;n<e.length;n++)if(e[n]){l=1;break}if(!l)break;for(n=r.length;!r[n]&&n>=0;n--);for(_=r[n],a=e[n],o=1,s=0,g=0,i=1;a+g&&a+i&&(f=Math.floor((_+o)/(a+g)),qp=Math.floor((_+s)/(a+i)),f==qp);)t=o-f*g,o=g,g=t,t=s-f*i,s=i,i=t,t=_-f*a,_=a,a=t;s?(copy_(T,r),linComb_(r,e,o,s),linComb_(e,T,i,g)):(mod_(r,e),copy_(T,r),copy_(r,e),copy_(e,T))}if(0!=e[0])for(t=modInt(r,e[0]),copyInt_(r,e[0]),e[0]=t;e[0];)r[0]%=e[0],t=r[0],r[0]=e[0],e[0]=t}function inverseMod_(r,e){var n=1+2*Math.max(r.length,e.length);if(!(1&r[0]||1&e[0]))return copyInt_(r,0),0;for(eg_u.length!=n&&(eg_u=new Array(n),eg_v=new Array(n),eg_A=new Array(n),eg_B=new Array(n),eg_C=new Array(n),eg_D=new Array(n)),copy_(eg_u,r),copy_(eg_v,e),copyInt_(eg_A,1),copyInt_(eg_B,0),copyInt_(eg_C,0),copyInt_(eg_D,1);;){for(;!(1&eg_u[0]);)halve_(eg_u),1&eg_A[0]||1&eg_B[0]?(add_(eg_A,e),halve_(eg_A),sub_(eg_B,r),halve_(eg_B)):(halve_(eg_A),halve_(eg_B));for(;!(1&eg_v[0]);)halve_(eg_v),1&eg_C[0]||1&eg_D[0]?(add_(eg_C,e),halve_(eg_C),sub_(eg_D,r),halve_(eg_D)):(halve_(eg_C),halve_(eg_D));if(greater(eg_v,eg_u)?(sub_(eg_v,eg_u),sub_(eg_C,eg_A),sub_(eg_D,eg_B)):(sub_(eg_u,eg_v),sub_(eg_A,eg_C),sub_(eg_B,eg_D)),equalsInt(eg_u,0))return negative(eg_C)&&add_(eg_C,e),copy_(r,eg_C),equalsInt(eg_v,1)?1:(copyInt_(r,0),0)}}function inverseModInt(r,e){for(var n=1,t=0;;){if(1==r)return n;if(0==r)return 0;if(t-=n*Math.floor(e/r),e%=r,1==e)return t;if(0==e)return 0;n-=t*Math.floor(r/e),r%=e}}function inverseModInt_(r,e){return inverseModInt(r,e)}function eGCD_(r,e,n,t,_){var a=0,o=Math.max(r.length,e.length);for(eg_u.length!=o&&(eg_u=new Array(o),eg_A=new Array(o),eg_B=new Array(o),eg_C=new Array(o),eg_D=new Array(o));!(1&r[0]||1&e[0]);)halve_(r),halve_(e),a++;for(copy_(eg_u,r),copy_(n,e),copyInt_(eg_A,1),copyInt_(eg_B,0),copyInt_(eg_C,0),copyInt_(eg_D,1);;){for(;!(1&eg_u[0]);)halve_(eg_u),1&eg_A[0]||1&eg_B[0]?(add_(eg_A,e),halve_(eg_A),sub_(eg_B,r),halve_(eg_B)):(halve_(eg_A),halve_(eg_B));for(;!(1&n[0]);)halve_(n),1&eg_C[0]||1&eg_D[0]?(add_(eg_C,e),halve_(eg_C),sub_(eg_D,r),halve_(eg_D)):(halve_(eg_C),halve_(eg_D));if(greater(n,eg_u)?(sub_(n,eg_u),sub_(eg_C,eg_A),sub_(eg_D,eg_B)):(sub_(eg_u,n),sub_(eg_A,eg_C),sub_(eg_B,eg_D)),equalsInt(eg_u,0))return negative(eg_C)&&(add_(eg_C,e),sub_(eg_D,r)),multInt_(eg_D,-1),copy_(t,eg_C),copy_(_,eg_D),void leftShift_(n,a)}}function negative(r){return r[r.length-1]>>bpe-1&1}function greaterShift(r,e,n){var t,_=r.length,a=e.length;for(k=a>_+n?_+n:a,t=a-1-n;_>t&&t>=0;t++)if(r[t]>0)return 1;for(t=_-1+n;a>t;t++)if(e[t]>0)return 0;for(t=k-1;t>=n;t--){if(r[t-n]>e[t])return 1;if(r[t-n]<e[t])return 0}return 0}function greater(r,e){var n,t=r.length<e.length?r.length:e.length;for(n=r.length;n<e.length;n++)if(e[n])return 0;for(n=e.length;n<r.length;n++)if(r[n])return 1;for(n=t-1;n>=0;n--){if(r[n]>e[n])return 1;if(r[n]<e[n])return 0}return 0}function divide_(r,e,n,t){var _,a,o,s,g,i,f,l;for(copy_(t,r),a=e.length;0==e[a-1];a--);for(l=e[a-1],f=0;l;f++)l>>=1;for(f=bpe-f,leftShift_(e,f),leftShift_(t,f),_=t.length;0==t[_-1]&&_>a;_--);for(copyInt_(n,0);!greaterShift(e,t,_-a);)subShift_(t,e,_-a),n[_-a]++;for(o=_-1;o>=a;o--){for(t[o]==e[a-1]?n[o-a]=mask:n[o-a]=Math.floor((t[o]*radix+t[o-1])/e[a-1]);g=(a>1?e[a-2]:0)*n[o-a],i=g>>bpe,g&=mask,s=i+n[o-a]*e[a-1],i=s>>bpe,s&=mask,i==t[o]?s==t[o-1]?g>(o>1?t[o-2]:0):s>t[o-1]:i>t[o];)n[o-a]--;linCombShift_(t,e,-n[o-a],o-a),negative(t)&&(addShift_(t,e,o-a),n[o-a]--)}rightShift_(e,f),rightShift_(t,f)}function carry_(r){var e,n,t,_;for(n=r.length,t=0,e=0;n>e;e++)t+=r[e],_=0,0>t&&(_=-(t>>bpe),t+=_*radix),r[e]=t&mask,t=(t>>bpe)-_}function modInt(r,e){var n,t=0;for(n=r.length-1;n>=0;n--)t=(t*radix+r[n])%e;return t}function int2bigInt(r,e,n){var t;return t=Math.ceil(e/bpe)+1,t=n>t?n:t,buff=new Array(t),copyInt_(buff,r),buff}function str2bigInt(r,e,n){var t,_,a,o,s,g=r.length;if(-1==e){for(a=new Array(0);;){for(o=new Array(a.length+1),_=0;_<a.length;_++)o[_+1]=a[_];if(o[0]=parseInt(r,10),a=o,t=r.indexOf(",",0),1>t)break;if(r=r.substring(t+1),0==r.length)break}return a.length<n?(o=new Array(n),copy_(o,a),o):a}for(a=int2bigInt(0,e*g,0),_=0;g>_&&(t=digitsStr.indexOf(r.substring(_,_+1),0),36>=e&&t>=36&&(t-=26),!(t>=e||0>t));_++)multInt_(a,e),addInt_(a,t);for(g=a.length;g>0&&!a[g-1];g--);for(g=n>g+1?n:g+1,o=new Array(g),s=g<a.length?g:a.length,_=0;s>_;_++)o[_]=a[_];for(;g>_;_++)o[_]=0;return o}function equalsInt(r,e){var n;if(r[0]!=e)return 0;for(n=1;n<r.length;n++)if(r[n])return 0;return 1}function equals(r,e){var n,t=r.length<e.length?r.length:e.length;for(n=0;t>n;n++)if(r[n]!=e[n])return 0;if(r.length>e.length){for(;n<r.length;n++)if(r[n])return 0}else for(;n<e.length;n++)if(e[n])return 0;return 1}function isZero(r){var e;for(e=0;e<r.length;e++)if(r[e])return 0;return 1}function bigInt2str(r,e){var n,t,_="";if(s6.length!=r.length?s6=dup(r):copy_(s6,r),-1==e){for(n=r.length-1;n>0;n--)_+=r[n]+",";_+=r[0]}else for(;!isZero(s6);)t=divInt_(s6,e),_=digitsStr.substring(t,t+1)+_;return 0==_.length&&(_="0"),_}function dup(r){return buff=new Array(r.length),copy_(buff,r),buff}function copy_(r,e){var n,t=r.length<e.length?r.length:e.length;for(n=0;t>n;n++)r[n]=e[n];for(n=t;n<r.length;n++)r[n]=0}function copyInt_(r,e){var n,t;for(t=e,n=0;n<r.length;n++)r[n]=t&mask,t>>=bpe}function addInt_(r,e){var n,t,_,a;for(r[0]+=e,t=r.length,_=0,n=0;t>n;n++)if(_+=r[n],a=0,0>_&&(a=-(_>>bpe),_+=a*radix),r[n]=_&mask,_=(_>>bpe)-a,!_)return}function rightShift_(r,e){var n,t=Math.floor(e/bpe);if(t){for(n=0;n<r.length-t;n++)r[n]=r[n+t];for(;n<r.length;n++)r[n]=0;e%=bpe}for(n=0;n<r.length-1;n++)r[n]=mask&(r[n+1]<<bpe-e|r[n]>>e);r[n]>>=e}function halve_(r){var e;for(e=0;e<r.length-1;e++)r[e]=mask&(r[e+1]<<bpe-1|r[e]>>1);r[e]=r[e]>>1|r[e]&radix>>1}function leftShift_(r,e){var n,t=Math.floor(e/bpe);if(t){for(n=r.length;n>=t;n--)r[n]=r[n-t];for(;n>=0;n--)r[n]=0;e%=bpe}if(e){for(n=r.length-1;n>0;n--)r[n]=mask&(r[n]<<e|r[n-1]>>bpe-e);r[n]=mask&r[n]<<e}}function multInt_(r,e){var n,t,_,a;if(e)for(t=r.length,_=0,n=0;t>n;n++)_+=r[n]*e,a=0,0>_&&(a=-(_>>bpe),_+=a*radix),r[n]=_&mask,_=(_>>bpe)-a}function divInt_(r,e){var n,t,_=0;for(n=r.length-1;n>=0;n--)t=_*radix+r[n],r[n]=Math.floor(t/e),_=t%e;return _}function linComb_(r,e,n,t){var _,a,o,s;for(o=r.length<e.length?r.length:e.length,s=r.length,a=0,_=0;o>_;_++)a+=n*r[_]+t*e[_],r[_]=a&mask,a>>=bpe;for(_=o;s>_;_++)a+=n*r[_],r[_]=a&mask,a>>=bpe}function linCombShift_(r,e,n,t){var _,a,o,s;for(o=r.length<t+e.length?r.length:t+e.length,s=r.length,a=0,_=t;o>_;_++)a+=r[_]+n*e[_-t],r[_]=a&mask,a>>=bpe;for(_=o;a&&s>_;_++)a+=r[_],r[_]=a&mask,a>>=bpe}function addShift_(r,e,n){var t,_,a,o;for(a=r.length<n+e.length?r.length:n+e.length,o=r.length,_=0,t=n;a>t;t++)_+=r[t]+e[t-n],r[t]=_&mask,_>>=bpe;for(t=a;_&&o>t;t++)_+=r[t],r[t]=_&mask,_>>=bpe}function subShift_(r,e,n){var t,_,a,o;for(a=r.length<n+e.length?r.length:n+e.length,o=r.length,_=0,t=n;a>t;t++)_+=r[t]-e[t-n],r[t]=_&mask,_>>=bpe;for(t=a;_&&o>t;t++)_+=r[t],r[t]=_&mask,_>>=bpe}function sub_(r,e){var n,t,_;for(_=r.length<e.length?r.length:e.length,t=0,n=0;_>n;n++)t+=r[n]-e[n],r[n]=t&mask,t>>=bpe;for(n=_;t&&n<r.length;n++)t+=r[n],r[n]=t&mask,t>>=bpe}function add_(r,e){var n,t,_;for(_=r.length<e.length?r.length:e.length,t=0,n=0;_>n;n++)t+=r[n]+e[n],r[n]=t&mask,t>>=bpe;for(n=_;t&&n<r.length;n++)t+=r[n],r[n]=t&mask,t>>=bpe}function mult_(r,e){var n;for(ss.length!=2*r.length&&(ss=new Array(2*r.length)),copyInt_(ss,0),n=0;n<e.length;n++)e[n]&&linCombShift_(ss,r,e[n],n);copy_(r,ss)}function mod_(r,e){s4.length!=r.length?s4=dup(r):copy_(s4,r),s5.length!=r.length&&(s5=dup(r)),divide_(s4,e,s5,r)}function multMod_(r,e,n){var t;for(s0.length!=2*r.length&&(s0=new Array(2*r.length)),copyInt_(s0,0),t=0;t<e.length;t++)e[t]&&linCombShift_(s0,r,e[t],t);mod_(s0,n),copy_(r,s0)}function squareMod_(r,e){var n,t,_,a,o;for(a=r.length;a>0&&!r[a-1];a--);for(o=a>e.length?2*a:2*e.length,s0.length!=o&&(s0=new Array(o)),copyInt_(s0,0),n=0;a>n;n++){for(_=s0[2*n]+r[n]*r[n],s0[2*n]=_&mask,_>>=bpe,t=n+1;a>t;t++)_=s0[n+t]+2*r[n]*r[t]+_,s0[n+t]=_&mask,_>>=bpe;s0[n+a]=_}mod_(s0,e),copy_(r,s0)}function trim(r,e){var n,t;for(n=r.length;n>0&&!r[n-1];n--);return t=new Array(n+e),copy_(t,r),t}function powMod_(r,e,n){var t,_,a,o;if(s7.length!=n.length&&(s7=dup(n)),0!=(1&n[0])){for(copyInt_(s7,0),a=n.length;a>0&&!n[a-1];a--);for(o=radix-inverseModInt(modInt(n,radix),radix),s7[a]=1,multMod_(r,s7,n),s3.length!=r.length?s3=dup(r):copy_(s3,r),t=e.length-1;t>0&!e[t];t--);if(0==e[t])return void copyInt_(r,1);for(_=1<<bpe-1;_&&!(e[t]&_);_>>=1);for(;;){if(!(_>>=1)){if(t--,0>t)return void mont_(r,one,n,o);_=1<<bpe-1}mont_(r,r,n,o),_&e[t]&&mont_(r,s3,n,o)}}else for(copy_(s7,r),copyInt_(r,1);!equalsInt(e,0);)1&e[0]&&multMod_(r,s7,n),divInt_(e,2),squareMod_(s7,n)}function mont_(r,e,n,t){var _,a,o,s,g,i,f=n.length,l=e.length;for(sa.length!=f&&(sa=new Array(f)),copyInt_(sa,0);f>0&&0==n[f-1];f--);for(;l>0&&0==e[l-1];l--);for(i=sa.length-1,_=0;f>_;_++){for(g=sa[0]+r[_]*e[0],s=(g&mask)*t&mask,o=g+s*n[0]>>bpe,g=r[_],a=1;l-4>a;)o+=sa[a]+s*n[a]+g*e[a],sa[a-1]=o&mask,o>>=bpe,a++,o+=sa[a]+s*n[a]+g*e[a],sa[a-1]=o&mask,o>>=bpe,a++,o+=sa[a]+s*n[a]+g*e[a],sa[a-1]=o&mask,o>>=bpe,a++,o+=sa[a]+s*n[a]+g*e[a],sa[a-1]=o&mask,o>>=bpe,a++,o+=sa[a]+s*n[a]+g*e[a],sa[a-1]=o&mask,o>>=bpe,a++;for(;l>a;)o+=sa[a]+s*n[a]+g*e[a],sa[a-1]=o&mask,o>>=bpe,a++;for(;f-4>a;)o+=sa[a]+s*n[a],sa[a-1]=o&mask,o>>=bpe,a++,o+=sa[a]+s*n[a],sa[a-1]=o&mask,o>>=bpe,a++,o+=sa[a]+s*n[a],sa[a-1]=o&mask,o>>=bpe,a++,o+=sa[a]+s*n[a],sa[a-1]=o&mask,o>>=bpe,a++,o+=sa[a]+s*n[a],sa[a-1]=o&mask,o>>=bpe,a++;for(;f>a;)o+=sa[a]+s*n[a],sa[a-1]=o&mask,o>>=bpe,a++;for(;i>a;)o+=sa[a],sa[a-1]=o&mask,o>>=bpe,a++;sa[a-1]=o&mask}greater(n,sa)||sub_(sa,n),copy_(r,sa)}for(bpe=0,mask=0,radix=mask+1,digitsStr="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_=!@#$%^&*()[]{}|;:,.<>/?`~ \\'\"+-",bpe=0;1<<bpe+1>1<<bpe;bpe++);bpe>>=1,mask=(1<<bpe)-1,radix=mask+1,one=int2bigInt(1,1,1),t=new Array(0),ss=t,s0=t,s1=t,s2=t,s3=t,s4=t,s5=t,s6=t,s7=t,T=t,sa=t,mr_x1=t,mr_r=t,mr_a=t,eg_v=t,eg_u=t,eg_A=t,eg_B=t,eg_C=t,eg_D=t,md_q1=t,md_q2=t,md_q3=t,md_r=t,md_r1=t,md_r2=t,md_tt=t,primes=t,pows=t,s_i=t,s_i2=t,s_R=t,s_rm=t,s_q=t,s_n1=t,s_a=t,s_r2=t,s_n=t,s_b=t,s_d=t,s_x1=t,s_x2=t,s_aa=t,rpprb=t;
